datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Project {
  id          String   @id @default(uuid())
  name        String
  role        String?
  description String
  shortDesc   String
  imageUrl    String?
  gifUrl      String?
  extraImages String[]
  githubUrl   String?
  liveUrl     String?
  technologies String[]
  learningOutcomes LearningOutcome[]
  dateRange   String
  position    Int      @default(0)
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Experience {
  id          String   @id @default(uuid())
  name        String
  role        String
  description String
  shortDesc   String
  imageUrl    String?
  gifUrl      String?
  extraImages String[]
  githubUrl   String?
  liveUrl     String?
  technologies String[]
  learningOutcomes LearningOutcome[]
  dateRange   String
  position    Int      @default(0)
  published   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Message {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  content   String
  createdAt DateTime @default(now())
}

model Admin {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model LearningOutcome {
  id          String   @id @default(uuid())
  header      String
  description String
  projectId   String?
  project     Project?  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  experienceId String?
  experience  Experience? @relation(fields: [experienceId], references: [id], onDelete: Cascade)
  position    Int      @default(0)
}
