generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Project {
  id               String            @id @default(uuid())
  name             String
  description      String
  shortDesc        String
  imageUrl         String?
  githubUrl        String?
  liveUrl          String?
  technologies     String[]
  dateRange        String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  position         Int               @default(0)
  published        Boolean           @default(false)
  gifUrl           String?
  role             String?
  extraImages      String[]
  learningOutcomes LearningOutcome[]

  @@index([position])
  @@index([published])
}

model Experience {
  id               String            @id @default(uuid())
  name             String
  role             String
  description      String
  shortDesc        String
  imageUrl         String?
  dateRange        String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  position         Int               @default(0)
  published        Boolean           @default(false)
  gifUrl           String?
  githubUrl        String?
  liveUrl          String?
  technologies     String[]
  extraImages      String[]
  learningOutcomes LearningOutcome[]

  @@index([position])
  @@index([published])
}

model Message {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  content   String
  createdAt DateTime @default(now())

  @@index([createdAt])
}

model Admin {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  @@index([email])
}

model LearningOutcome {
  id           String      @id @default(uuid())
  header       String
  description  String
  projectId    String?
  experienceId String?
  position     Int         @default(0)
  experience   Experience? @relation(fields: [experienceId], references: [id], onDelete: Cascade)
  project      Project?    @relation(fields: [projectId], references: [id], onDelete: Cascade)

  @@index([position])
  @@index([projectId])
  @@index([experienceId])
}

model ContactSubmission {
  id        String   @id @default(cuid())
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())

  @@index([createdAt])
  @@index([email])
}
